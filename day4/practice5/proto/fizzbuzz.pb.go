// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fizzbuzz.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CalcFizzBuzzRequest struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcFizzBuzzRequest) Reset()         { *m = CalcFizzBuzzRequest{} }
func (m *CalcFizzBuzzRequest) String() string { return proto.CompactTextString(m) }
func (*CalcFizzBuzzRequest) ProtoMessage()    {}
func (*CalcFizzBuzzRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fizzbuzz_fca9049b7d95a3a4, []int{0}
}
func (m *CalcFizzBuzzRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcFizzBuzzRequest.Unmarshal(m, b)
}
func (m *CalcFizzBuzzRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcFizzBuzzRequest.Marshal(b, m, deterministic)
}
func (dst *CalcFizzBuzzRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcFizzBuzzRequest.Merge(dst, src)
}
func (m *CalcFizzBuzzRequest) XXX_Size() int {
	return xxx_messageInfo_CalcFizzBuzzRequest.Size(m)
}
func (m *CalcFizzBuzzRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcFizzBuzzRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalcFizzBuzzRequest proto.InternalMessageInfo

func (m *CalcFizzBuzzRequest) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type CalcFizzBuzzReply struct {
	Res                  string   `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcFizzBuzzReply) Reset()         { *m = CalcFizzBuzzReply{} }
func (m *CalcFizzBuzzReply) String() string { return proto.CompactTextString(m) }
func (*CalcFizzBuzzReply) ProtoMessage()    {}
func (*CalcFizzBuzzReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fizzbuzz_fca9049b7d95a3a4, []int{1}
}
func (m *CalcFizzBuzzReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcFizzBuzzReply.Unmarshal(m, b)
}
func (m *CalcFizzBuzzReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcFizzBuzzReply.Marshal(b, m, deterministic)
}
func (dst *CalcFizzBuzzReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcFizzBuzzReply.Merge(dst, src)
}
func (m *CalcFizzBuzzReply) XXX_Size() int {
	return xxx_messageInfo_CalcFizzBuzzReply.Size(m)
}
func (m *CalcFizzBuzzReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcFizzBuzzReply.DiscardUnknown(m)
}

var xxx_messageInfo_CalcFizzBuzzReply proto.InternalMessageInfo

func (m *CalcFizzBuzzReply) GetRes() string {
	if m != nil {
		return m.Res
	}
	return ""
}

type SquareListRequest struct {
	NumList              []int64  `protobuf:"varint,1,rep,packed,name=numList,proto3" json:"numList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareListRequest) Reset()         { *m = SquareListRequest{} }
func (m *SquareListRequest) String() string { return proto.CompactTextString(m) }
func (*SquareListRequest) ProtoMessage()    {}
func (*SquareListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fizzbuzz_fca9049b7d95a3a4, []int{2}
}
func (m *SquareListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareListRequest.Unmarshal(m, b)
}
func (m *SquareListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareListRequest.Marshal(b, m, deterministic)
}
func (dst *SquareListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareListRequest.Merge(dst, src)
}
func (m *SquareListRequest) XXX_Size() int {
	return xxx_messageInfo_SquareListRequest.Size(m)
}
func (m *SquareListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SquareListRequest proto.InternalMessageInfo

func (m *SquareListRequest) GetNumList() []int64 {
	if m != nil {
		return m.NumList
	}
	return nil
}

type SquareListReply struct {
	NumList              []int64  `protobuf:"varint,1,rep,packed,name=numList,proto3" json:"numList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SquareListReply) Reset()         { *m = SquareListReply{} }
func (m *SquareListReply) String() string { return proto.CompactTextString(m) }
func (*SquareListReply) ProtoMessage()    {}
func (*SquareListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fizzbuzz_fca9049b7d95a3a4, []int{3}
}
func (m *SquareListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SquareListReply.Unmarshal(m, b)
}
func (m *SquareListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SquareListReply.Marshal(b, m, deterministic)
}
func (dst *SquareListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SquareListReply.Merge(dst, src)
}
func (m *SquareListReply) XXX_Size() int {
	return xxx_messageInfo_SquareListReply.Size(m)
}
func (m *SquareListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SquareListReply.DiscardUnknown(m)
}

var xxx_messageInfo_SquareListReply proto.InternalMessageInfo

func (m *SquareListReply) GetNumList() []int64 {
	if m != nil {
		return m.NumList
	}
	return nil
}

type StreamStruct struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamStruct) Reset()         { *m = StreamStruct{} }
func (m *StreamStruct) String() string { return proto.CompactTextString(m) }
func (*StreamStruct) ProtoMessage()    {}
func (*StreamStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_fizzbuzz_fca9049b7d95a3a4, []int{4}
}
func (m *StreamStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamStruct.Unmarshal(m, b)
}
func (m *StreamStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamStruct.Marshal(b, m, deterministic)
}
func (dst *StreamStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamStruct.Merge(dst, src)
}
func (m *StreamStruct) XXX_Size() int {
	return xxx_messageInfo_StreamStruct.Size(m)
}
func (m *StreamStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamStruct.DiscardUnknown(m)
}

var xxx_messageInfo_StreamStruct proto.InternalMessageInfo

func (m *StreamStruct) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*CalcFizzBuzzRequest)(nil), "proto.CalcFizzBuzzRequest")
	proto.RegisterType((*CalcFizzBuzzReply)(nil), "proto.CalcFizzBuzzReply")
	proto.RegisterType((*SquareListRequest)(nil), "proto.SquareListRequest")
	proto.RegisterType((*SquareListReply)(nil), "proto.SquareListReply")
	proto.RegisterType((*StreamStruct)(nil), "proto.StreamStruct")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FizzBuzzClient is the client API for FizzBuzz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzBuzzClient interface {
	CalcFizzBuzz(ctx context.Context, in *CalcFizzBuzzRequest, opts ...grpc.CallOption) (*CalcFizzBuzzReply, error)
	SquareList(ctx context.Context, in *SquareListRequest, opts ...grpc.CallOption) (*SquareListReply, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (FizzBuzz_StreamClient, error)
}

type fizzBuzzClient struct {
	cc *grpc.ClientConn
}

func NewFizzBuzzClient(cc *grpc.ClientConn) FizzBuzzClient {
	return &fizzBuzzClient{cc}
}

func (c *fizzBuzzClient) CalcFizzBuzz(ctx context.Context, in *CalcFizzBuzzRequest, opts ...grpc.CallOption) (*CalcFizzBuzzReply, error) {
	out := new(CalcFizzBuzzReply)
	err := c.cc.Invoke(ctx, "/proto.FizzBuzz/CalcFizzBuzz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fizzBuzzClient) SquareList(ctx context.Context, in *SquareListRequest, opts ...grpc.CallOption) (*SquareListReply, error) {
	out := new(SquareListReply)
	err := c.cc.Invoke(ctx, "/proto.FizzBuzz/SquareList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fizzBuzzClient) Stream(ctx context.Context, opts ...grpc.CallOption) (FizzBuzz_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FizzBuzz_serviceDesc.Streams[0], "/proto.FizzBuzz/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &fizzBuzzStreamClient{stream}
	return x, nil
}

type FizzBuzz_StreamClient interface {
	Send(*StreamStruct) error
	Recv() (*StreamStruct, error)
	grpc.ClientStream
}

type fizzBuzzStreamClient struct {
	grpc.ClientStream
}

func (x *fizzBuzzStreamClient) Send(m *StreamStruct) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fizzBuzzStreamClient) Recv() (*StreamStruct, error) {
	m := new(StreamStruct)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FizzBuzzServer is the server API for FizzBuzz service.
type FizzBuzzServer interface {
	CalcFizzBuzz(context.Context, *CalcFizzBuzzRequest) (*CalcFizzBuzzReply, error)
	SquareList(context.Context, *SquareListRequest) (*SquareListReply, error)
	Stream(FizzBuzz_StreamServer) error
}

func RegisterFizzBuzzServer(s *grpc.Server, srv FizzBuzzServer) {
	s.RegisterService(&_FizzBuzz_serviceDesc, srv)
}

func _FizzBuzz_CalcFizzBuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalcFizzBuzzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServer).CalcFizzBuzz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FizzBuzz/CalcFizzBuzz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServer).CalcFizzBuzz(ctx, req.(*CalcFizzBuzzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FizzBuzz_SquareList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServer).SquareList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FizzBuzz/SquareList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServer).SquareList(ctx, req.(*SquareListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FizzBuzz_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FizzBuzzServer).Stream(&fizzBuzzStreamServer{stream})
}

type FizzBuzz_StreamServer interface {
	Send(*StreamStruct) error
	Recv() (*StreamStruct, error)
	grpc.ServerStream
}

type fizzBuzzStreamServer struct {
	grpc.ServerStream
}

func (x *fizzBuzzStreamServer) Send(m *StreamStruct) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fizzBuzzStreamServer) Recv() (*StreamStruct, error) {
	m := new(StreamStruct)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FizzBuzz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FizzBuzz",
	HandlerType: (*FizzBuzzServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalcFizzBuzz",
			Handler:    _FizzBuzz_CalcFizzBuzz_Handler,
		},
		{
			MethodName: "SquareList",
			Handler:    _FizzBuzz_SquareList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _FizzBuzz_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "fizzbuzz.proto",
}

func init() { proto.RegisterFile("fizzbuzz.proto", fileDescriptor_fizzbuzz_fca9049b7d95a3a4) }

var fileDescriptor_fizzbuzz_fca9049b7d95a3a4 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x37, 0x04, 0x57, 0x1d, 0x16, 0x75, 0xb3, 0x20, 0x21, 0xa7, 0x12, 0x10, 0x0b, 0xe2,
	0x22, 0x7a, 0xf1, 0x28, 0x0a, 0x7b, 0xf2, 0x94, 0x3e, 0x41, 0xb7, 0x44, 0x28, 0xf4, 0x6f, 0x9a,
	0x1c, 0x3a, 0x0f, 0xe9, 0x33, 0x49, 0x5a, 0x82, 0x15, 0xb3, 0xa7, 0x4c, 0x66, 0x7e, 0x7c, 0xfc,
	0x3e, 0xb8, 0xfa, 0x2a, 0x11, 0x8f, 0x0e, 0x71, 0xdf, 0x99, 0xd6, 0xb6, 0xec, 0x6c, 0x7a, 0xe4,
	0x3d, 0xec, 0x3e, 0xf2, 0xaa, 0x38, 0x94, 0x88, 0xef, 0x0e, 0x51, 0xe9, 0xde, 0xe9, 0xc1, 0xb2,
	0x1b, 0xa0, 0x8d, 0xab, 0x39, 0x49, 0x48, 0x4a, 0x95, 0x1f, 0xe5, 0x1d, 0x6c, 0xff, 0x82, 0x5d,
	0x35, 0x7a, 0xcc, 0xe8, 0x61, 0xc2, 0x2e, 0x95, 0x1f, 0xe5, 0x23, 0x6c, 0xb3, 0xde, 0xe5, 0x46,
	0x7f, 0x96, 0x83, 0x0d, 0x69, 0x1c, 0xce, 0x1b, 0x57, 0xfb, 0x0d, 0x27, 0x09, 0x4d, 0xa9, 0x0a,
	0x5f, 0xf9, 0x00, 0xd7, 0x4b, 0xdc, 0x67, 0x9e, 0x86, 0x13, 0xd8, 0x64, 0xd6, 0xe8, 0xbc, 0xce,
	0xac, 0x71, 0x45, 0x44, 0xf2, 0xf9, 0x9b, 0xc0, 0x45, 0x30, 0x64, 0x07, 0xd8, 0x2c, 0x8d, 0x99,
	0x98, 0x9b, 0xef, 0x23, 0x7d, 0x05, 0x8f, 0xde, 0xba, 0x6a, 0x94, 0x2b, 0xf6, 0x06, 0xf0, 0xeb,
	0xc8, 0x02, 0xf9, 0xaf, 0xa5, 0xb8, 0x8d, 0x5c, 0xe6, 0x84, 0x57, 0x58, 0xcf, 0xe2, 0x6c, 0x17,
	0x98, 0x45, 0x0f, 0x11, 0x5b, 0xca, 0x55, 0x4a, 0x9e, 0xc8, 0x71, 0x3d, 0x5d, 0x5e, 0x7e, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x01, 0x3b, 0x90, 0x08, 0xbe, 0x01, 0x00, 0x00,
}
